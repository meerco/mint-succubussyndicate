{"ast":null,"code":"import React, { useMemo, useCallback } from \"react\";\nimport useCrossmintStatus, { OnboardingRequestStatusResponse } from \"./hooks/useCrossmintStatus\";\nimport useCrossmintModal from \"./hooks/useCrossmintModal\";\nimport { useStyles, formatProps } from \"./styles\";\nimport { isClientSide } from \"./utils\";\nimport { mintingContractTypes } from \"./types\";\nconst defaultMintConfig = {\n  type: mintingContractTypes.CANDY_MACHINE\n};\nexport const CrossmintPayButton = _ref => {\n  let {\n    className,\n    disabled,\n    onClick,\n    style,\n    tabIndex,\n    theme = \"dark\",\n    collectionTitle,\n    collectionDescription,\n    collectionPhoto,\n    mintTo,\n    emailTo,\n    listingId,\n    clientId,\n    development = false,\n    auctionId,\n    hideMintOnInactiveClient = false,\n    showOverlay = true,\n    mintConfig = defaultMintConfig,\n    ...props\n  } = _ref;\n  const status = useCrossmintStatus({\n    clientId,\n    development\n  });\n  const {\n    connecting,\n    connect\n  } = useCrossmintModal({\n    clientId,\n    development,\n    showOverlay\n  });\n\n  if (collectionTitle === \"<TITLE_FOR_YOUR_COLLECTION>\") {\n    console.warn(\"No collection title specified. Please add a collection title to your <CrossmintPayButton />\");\n    collectionTitle = \"\";\n  }\n\n  if (collectionDescription === \"<DESCRIPTION_OF_YOUR_COLLECTION>\") {\n    console.warn(\"No collection description specified. Please add a collection description to your <CrossmintPayButton />\");\n    collectionDescription = \"\";\n  }\n\n  if (collectionPhoto === \"<OPT_URL_TO_PHOTO_COVER>\") {\n    console.warn(\"No collection photo specified. Please add a collection photo to your <CrossmintPayButton />\");\n    collectionPhoto = \"\";\n  }\n\n  const handleClick = useCallback(event => {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      connect(mintConfig, collectionTitle, collectionDescription, collectionPhoto, mintTo, emailTo, listingId);\n    }\n  }, [onClick]);\n  const classes = useStyles(formatProps(theme));\n  const content = useMemo(() => {\n    if (connecting) return React.createElement(\"p\", {\n      className: classes.crossmintParagraph\n    }, \"Connecting ...\");\n    return React.createElement(\"p\", {\n      className: classes.crossmintParagraph\n    }, \"Buy with credit card\");\n  }, [connecting]);\n\n  if (hideMintOnInactiveClient && status !== OnboardingRequestStatusResponse.ACCEPTED) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, null, isClientSide && React.createElement(\"button\", {\n    className: `${classes.crossmintButton} ${className || \"\"}`,\n    disabled: disabled,\n    onClick: handleClick,\n    style: { ...style\n    },\n    tabIndex: tabIndex,\n    ...props\n  }, React.createElement(\"img\", {\n    className: classes.crossmintImg,\n    src: \"https://www.crossmint.io/assets/crossmint/logo.png\",\n    alt: \"Crossmint logo\"\n  }), content));\n};","map":{"version":3,"sources":["../../src/CrossmintPayButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useMemo, useCallback } from \"react\";\nimport useCrossmintStatus, { OnboardingRequestStatusResponse } from \"./hooks/useCrossmintStatus\";\nimport useCrossmintModal from \"./hooks/useCrossmintModal\";\nimport { useStyles, formatProps } from \"./styles\";\nimport { isClientSide } from \"./utils\";\nimport { mintingContractTypes } from \"./types\";\nconst defaultMintConfig = {\n    type: mintingContractTypes.CANDY_MACHINE,\n};\nexport const CrossmintPayButton = ({ className, disabled, onClick, style, tabIndex, theme = \"dark\", collectionTitle, collectionDescription, collectionPhoto, mintTo, emailTo, listingId, clientId, development = false, auctionId, hideMintOnInactiveClient = false, showOverlay = true, mintConfig = defaultMintConfig, ...props }) => {\n    const status = useCrossmintStatus({ clientId, development });\n    const { connecting, connect } = useCrossmintModal({\n        clientId,\n        development,\n        showOverlay,\n    });\n    if (collectionTitle === \"<TITLE_FOR_YOUR_COLLECTION>\") {\n        console.warn(\"No collection title specified. Please add a collection title to your <CrossmintPayButton />\");\n        collectionTitle = \"\";\n    }\n    if (collectionDescription === \"<DESCRIPTION_OF_YOUR_COLLECTION>\") {\n        console.warn(\"No collection description specified. Please add a collection description to your <CrossmintPayButton />\");\n        collectionDescription = \"\";\n    }\n    if (collectionPhoto === \"<OPT_URL_TO_PHOTO_COVER>\") {\n        console.warn(\"No collection photo specified. Please add a collection photo to your <CrossmintPayButton />\");\n        collectionPhoto = \"\";\n    }\n    const handleClick = useCallback((event) => {\n        if (onClick)\n            onClick(event);\n        if (!event.defaultPrevented) {\n            connect(mintConfig, collectionTitle, collectionDescription, collectionPhoto, mintTo, emailTo, listingId);\n        }\n    }, [onClick]);\n    const classes = useStyles(formatProps(theme));\n    const content = useMemo(() => {\n        if (connecting)\n            return React.createElement(\"p\", { className: classes.crossmintParagraph }, \"Connecting ...\");\n        return React.createElement(\"p\", { className: classes.crossmintParagraph }, \"Buy with credit card\");\n    }, [connecting]);\n    if (hideMintOnInactiveClient && status !== OnboardingRequestStatusResponse.ACCEPTED) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null, isClientSide && (React.createElement(\"button\", { className: `${classes.crossmintButton} ${className || \"\"}`, disabled: disabled, onClick: handleClick, style: { ...style }, tabIndex: tabIndex, ...props },\n        React.createElement(\"img\", { className: classes.crossmintImg, src: \"https://www.crossmint.io/assets/crossmint/logo.png\", alt: \"Crossmint logo\" }),\n        content))));\n};\n//# sourceMappingURL=CrossmintPayButton.js.map"]},"metadata":{},"sourceType":"module"}