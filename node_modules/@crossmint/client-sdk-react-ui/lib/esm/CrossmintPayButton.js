import React, { useMemo, useCallback } from "react";
import useCrossmintStatus, { OnboardingRequestStatusResponse } from "./hooks/useCrossmintStatus";
import useCrossmintModal from "./hooks/useCrossmintModal";
import { useStyles, formatProps } from "./styles";
import { isClientSide } from "./utils";
import { mintingContractTypes } from "./types";
const defaultMintConfig = {
    type: mintingContractTypes.CANDY_MACHINE,
};
export const CrossmintPayButton = ({ className, disabled, onClick, style, tabIndex, theme = "dark", collectionTitle, collectionDescription, collectionPhoto, mintTo, emailTo, listingId, clientId, development = false, auctionId, hideMintOnInactiveClient = false, showOverlay = true, mintConfig = defaultMintConfig, ...props }) => {
    const status = useCrossmintStatus({ clientId, development });
    const { connecting, connect } = useCrossmintModal({
        clientId,
        development,
        showOverlay,
    });
    if (collectionTitle === "<TITLE_FOR_YOUR_COLLECTION>") {
        console.warn("No collection title specified. Please add a collection title to your <CrossmintPayButton />");
        collectionTitle = "";
    }
    if (collectionDescription === "<DESCRIPTION_OF_YOUR_COLLECTION>") {
        console.warn("No collection description specified. Please add a collection description to your <CrossmintPayButton />");
        collectionDescription = "";
    }
    if (collectionPhoto === "<OPT_URL_TO_PHOTO_COVER>") {
        console.warn("No collection photo specified. Please add a collection photo to your <CrossmintPayButton />");
        collectionPhoto = "";
    }
    const handleClick = useCallback((event) => {
        if (onClick)
            onClick(event);
        if (!event.defaultPrevented) {
            connect(mintConfig, collectionTitle, collectionDescription, collectionPhoto, mintTo, emailTo, listingId);
        }
    }, [onClick]);
    const classes = useStyles(formatProps(theme));
    const content = useMemo(() => {
        if (connecting)
            return React.createElement("p", { className: classes.crossmintParagraph }, "Connecting ...");
        return React.createElement("p", { className: classes.crossmintParagraph }, "Buy with credit card");
    }, [connecting]);
    if (hideMintOnInactiveClient && status !== OnboardingRequestStatusResponse.ACCEPTED) {
        return null;
    }
    return (React.createElement(React.Fragment, null, isClientSide && (React.createElement("button", { className: `${classes.crossmintButton} ${className || ""}`, disabled: disabled, onClick: handleClick, style: { ...style }, tabIndex: tabIndex, ...props },
        React.createElement("img", { className: classes.crossmintImg, src: "https://www.crossmint.io/assets/crossmint/logo.png", alt: "Crossmint logo" }),
        content))));
};
//# sourceMappingURL=CrossmintPayButton.js.map