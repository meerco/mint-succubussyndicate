"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CrossmintStatusButton = void 0;
const react_1 = __importStar(require("react"));
const useCrossmintStatus_1 = __importStar(require("./hooks/useCrossmintStatus"));
const styles_1 = require("./styles");
const types_1 = require("./types");
const utils_1 = require("./utils");
const CrossmintStatusButton = (_a) => {
    var { className, disabled, onClick, style, tabIndex, theme = "dark", clientId, auctionId, development = false, platformId, mintConfig } = _a, props = __rest(_a, ["className", "disabled", "onClick", "style", "tabIndex", "theme", "clientId", "auctionId", "development", "platformId", "mintConfig"]);
    const status = (0, useCrossmintStatus_1.default)({ clientId, development });
    const formatOnboardingQueryParams = () => {
        const onboardingQueryParams = {
            clientId: clientId,
        };
        if (platformId)
            onboardingQueryParams.platformId = platformId;
        if (auctionId)
            onboardingQueryParams.auctionId = auctionId;
        if (mintConfig)
            onboardingQueryParams.mintConfig = JSON.stringify(mintConfig);
        return new URLSearchParams(onboardingQueryParams).toString();
    };
    const goToOnboarding = () => {
        const baseUrl = development ? types_1.baseUrls.dev : types_1.baseUrls.prod;
        window.open(`${baseUrl}/developers/onboarding?${formatOnboardingQueryParams()}`, "_blank");
    };
    const handleClick = (0, react_1.useCallback)((event) => {
        if (onClick)
            onClick(event);
        if (status === useCrossmintStatus_1.OnboardingRequestStatusResponse.WAITING_SUBMISSION) {
            goToOnboarding();
            return;
        }
    }, [status]);
    const classes = (0, styles_1.useStyles)((0, styles_1.formatProps)(theme));
    const content = (0, react_1.useMemo)(() => {
        switch (status) {
            case useCrossmintStatus_1.OnboardingRequestStatusResponse.INVALID:
                return react_1.default.createElement("p", { className: classes.crossmintParagraph }, "Invalid clientId");
            case useCrossmintStatus_1.OnboardingRequestStatusResponse.WAITING_SUBMISSION:
                return react_1.default.createElement("p", { className: classes.crossmintParagraph }, "Click here to setup CrossMint");
            case useCrossmintStatus_1.OnboardingRequestStatusResponse.PENDING:
                return react_1.default.createElement("p", { className: classes.crossmintParagraph }, "Your application is under review");
            case useCrossmintStatus_1.OnboardingRequestStatusResponse.ACCEPTED:
                return react_1.default.createElement("p", { className: classes.crossmintParagraph }, "You're good to go!");
            case useCrossmintStatus_1.OnboardingRequestStatusResponse.REJECTED:
                return react_1.default.createElement("p", { className: classes.crossmintParagraph }, "Your application was rejected");
        }
    }, [status]);
    return (react_1.default.createElement(react_1.default.Fragment, null, utils_1.isClientSide && (react_1.default.createElement("button", Object.assign({ className: `${classes.crossmintButton} ${className || ""}`, disabled: status !== useCrossmintStatus_1.OnboardingRequestStatusResponse.WAITING_SUBMISSION, onClick: handleClick, style: Object.assign({}, style), tabIndex: tabIndex }, props),
        react_1.default.createElement("img", { className: classes.crossmintImg, src: `${types_1.baseUrls.prod}/assets/crossmint/logo.png`, alt: "Crossmint logo" }),
        content))));
};
exports.CrossmintStatusButton = CrossmintStatusButton;
//# sourceMappingURL=CrossmintStatusButton.js.map