"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useStyles = exports.formatProps = void 0;
const react_jss_1 = require("react-jss");
const DARK_BG = "#1e1e1e";
const themeIsLight = (theme) => theme === "light";
const formatProps = (theme) => ({
    buttonBgColor: themeIsLight(theme) ? "white" : DARK_BG,
    paragraphColor: themeIsLight(theme) ? "black" : "white",
});
exports.formatProps = formatProps;
exports.useStyles = (0, react_jss_1.createUseStyles)({
    "@global": {
        "@import": "url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap')",
    },
    crossmintButton: {
        display: "flex",
        "flex-direction": "row",
        "align-items": "center",
        padding: "0.875rem 0.875rem",
        "font-weight": "900",
        transition: "opacity ease-in-out 0.25s",
        "border-radius": "0.5rem",
        "font-family": `"Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif`,
        outline: "none",
        border: "none",
        "box-shadow": "0px 8px 15px rgba(0, 0, 0, 0.1)",
        "justify-content": "center",
        background: ({ buttonBgColor }) => buttonBgColor,
        "&:hover:enabled": {
            opacity: "0.6",
            cursor: "pointer",
        },
    },
    crossmintImg: {
        width: "21px",
        height: "21px",
        "margin-right": "0.875rem",
    },
    crossmintParagraph: {
        color: ({ paragraphColor }) => paragraphColor,
        margin: "0",
    },
});
//# sourceMappingURL=index.js.map